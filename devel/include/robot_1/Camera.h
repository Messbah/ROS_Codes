// Generated by gencpp from file robot_1/Camera.msg
// DO NOT EDIT!


#ifndef ROBOT_1_MESSAGE_CAMERA_H
#define ROBOT_1_MESSAGE_CAMERA_H

#include <ros/service_traits.h>


#include <robot_1/CameraRequest.h>
#include <robot_1/CameraResponse.h>


namespace robot_1
{

struct Camera
{

typedef CameraRequest Request;
typedef CameraResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Camera
} // namespace robot_1


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::robot_1::Camera > {
  static const char* value()
  {
    return "0180f7bb4f5a39bc4ca26899b8eb533c";
  }

  static const char* value(const ::robot_1::Camera&) { return value(); }
};

template<>
struct DataType< ::robot_1::Camera > {
  static const char* value()
  {
    return "robot_1/Camera";
  }

  static const char* value(const ::robot_1::Camera&) { return value(); }
};


// service_traits::MD5Sum< ::robot_1::CameraRequest> should match
// service_traits::MD5Sum< ::robot_1::Camera >
template<>
struct MD5Sum< ::robot_1::CameraRequest>
{
  static const char* value()
  {
    return MD5Sum< ::robot_1::Camera >::value();
  }
  static const char* value(const ::robot_1::CameraRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::robot_1::CameraRequest> should match
// service_traits::DataType< ::robot_1::Camera >
template<>
struct DataType< ::robot_1::CameraRequest>
{
  static const char* value()
  {
    return DataType< ::robot_1::Camera >::value();
  }
  static const char* value(const ::robot_1::CameraRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::robot_1::CameraResponse> should match
// service_traits::MD5Sum< ::robot_1::Camera >
template<>
struct MD5Sum< ::robot_1::CameraResponse>
{
  static const char* value()
  {
    return MD5Sum< ::robot_1::Camera >::value();
  }
  static const char* value(const ::robot_1::CameraResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::robot_1::CameraResponse> should match
// service_traits::DataType< ::robot_1::Camera >
template<>
struct DataType< ::robot_1::CameraResponse>
{
  static const char* value()
  {
    return DataType< ::robot_1::Camera >::value();
  }
  static const char* value(const ::robot_1::CameraResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // ROBOT_1_MESSAGE_CAMERA_H
